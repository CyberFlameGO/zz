using <stdio.h>::{printf};

using string;
using address;
using err;
using udp;
using io;

export fn main() -> int {
    err::Err+1000 mut e;
    e.new();

    string::String+100 mut sin = {0};
    sin.append_cstr("[::1]:8083");

    address::Address mut sa = {0};
    sa.from_cstr(sin.mem);

    string::String+100 mut sout = {0};
    address::to_string(&sout, &sa);

    printf(">%.*s<\n", (int)sout.len, sout.mem);


    udp::Socket mut sock = udp::bind(&e, &sa);
    e.abort();


    



/*
    udp::Socket mut sock = {0};

    udp::bind(&sock, &e, &sa);
    err::abort(&e);

    udp::sendto(&sock, &e, &sa, (u8*)"lulz", 4);
    err::abort(&e);

    udp::deadline(&sock, &e, time::from_seconds(1));
    err::abort(&e);

    string::String+100 mut srecv = {0};
    address::Address mut sa2 = {0};
    udp::recv(&sock, &e, &srecv, &sa2);
    err::abort(&e);

    string::clear(&sout);
    address::to_string(&sout, &sa2);
    printf(">%.*s<\n", (int)sout.len, sout.mem);
    printf(">%.*s<\n", (int)srecv.len, srecv.mem);

    udp::close(&sock);
    */

    return 0;
}
