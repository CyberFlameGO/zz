using <stdio.h>::{printf};

using string;
using address;
using err;
using udp;
using io;
using io::unix;

export fn main() -> int {
    err::Err+1000 mut e;
    e.new();

    address::Address recv_addr = address::from_cstr("0.0.0.0:8083");
    address::Address send_addr = address::from_cstr("0.0.0.0:0");

    unix::Async+10 mut async;
    async.new();

    udp::Socket mut receiver = udp::bind_async(&e, &recv_addr, &async);
    e.abort();

    udp::Socket mut sender = udp::bind_async(&e, &send_addr, &async);
    e.abort();

    string::String+100 mut msg = {0};
    msg.append_cstr("helloouuu");

    sender.sendto(&e, &msg, &recv_addr);
    e.abort();

    io::select(&async, &e, &receiver, io::Ready::Read);
    e.abort();

    async.wait(&e);
    e.abort();

    string::String+100 mut sbuf = {0};
    sbuf.clear();

    address::Address mut ra = address::new();
    receiver.recvfrom(&e, &sbuf, &ra);
    e.abort();

    printf("%.*s\n", (int)sbuf.len, sbuf.mem);

    receiver.close();
    sender.close();

    return 0;
}
