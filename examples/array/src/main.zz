struct A {
    u8 i;
}

pub fn memcpy(u8 mut* dst, u8 * src, usize bound<dst> bound<src> len) {
    usize at = 0;
    at is bound<dst>;
    dst[at] = 3;
}



const usize SIZE = 3;

pub fn fixed(u8 mut * len<SIZE> boh) {
    boh[2] = 3;
}

pub fn main() -> int {
    u8 mut src[23] = {0};

    u8 mut f[SIZE] = {0};

    memcpy(f, src, SIZE);


    src[1] = 3;

    u8 mut dst[20] = {0};
    memcpy(dst, src, len(dst));
    return 0;
}
