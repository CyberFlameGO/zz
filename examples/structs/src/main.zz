using <stdio.h>::{printf};

struct A{
    int mut a;
    int mut b;
    C   c;
    C mut* mut x;
};


struct C{
    int mut m;
};

struct Z{
    int mut j;
}


fn lo(C *a) -> C* {
    return a;
}


fn foo(A mut *a, Z * unsafe z) {
    if a->x {
        C mut* beep = a->x;
        beep->m = a->b;
        (a->x)->m = 3;
    }
}

export fn main() -> int {

    C mut c = {0};

    A mut b = {0};
    b.x = &c;
    b.b = 3;
    foo(&b, 0);


    C *y = lo(&c);


    y->m is safe;

    int r =  y->m;
    printf("hello structs %d\n", r);
    return 0;
}
