pub fn memcpy(u8 mut *dst, u8 * src, usize l)
    where l > 0
    where len(dst) >= l
    where len(src) >= l
{
    for (usize mut i = 0; i < l; i++) {
        dst[i] = src[i];
    }
}

const usize SIZE = 3;

pub fn fixed(u8 mut* boh)
    where len(boh) == SIZE
{
    boh[2] = 3;
}

pub fn main() -> int {
    u8 mut src[23] = {0};
    u8 mut f[SIZE] = {0};

    static_assert(len(f) == SIZE);
    static_assert(len(src) == 23);

    memcpy(f, src, SIZE);

    src[1] = 3;

    u8 mut dst[20] = {0};
    memcpy(dst, src, static(len(dst)));
    return 0;
}
